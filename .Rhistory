geom_boxplot(alpha = 0.5) +
ggtitle("T3 Levels by Thyroid Cancer Risk") +
theme_minimal()
g3 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = T4_Level, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("T4 Levels by Thyroid Cancer Risk") +
theme_minimal()
g4 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = Age, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("Age by Thyroid Cancer Risk") +
theme_minimal()
g5 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = Nodule_Size, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("Nodule Size by Thyroid Cancer Risk") +
theme_minimal()
# Boxplots for numerical variables by Thyroid_Cancer_Risk
g1 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = TSH_Level, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("TSH Levels by Thyroid Cancer Risk") +
theme_minimal()
g2 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = T3_Level, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("T3 Levels by Thyroid Cancer Risk") +
theme_minimal()
g3 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = T4_Level, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("T4 Levels by Thyroid Cancer Risk") +
theme_minimal()
g4 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = Age, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("Age by Thyroid Cancer Risk") +
theme_minimal()
g5 <- ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, y = Nodule_Size, fill = Thyroid_Cancer_Risk)) +
geom_boxplot(alpha = 0.5) +
ggtitle("Nodule Size by Thyroid Cancer Risk") +
theme_minimal()
g1
g2
g3
g4
g5
num_df <- df %>% select_if(is.numeric)
num_df <- thyroid_data %>% select_if(is.numeric)
corr_matrix <- cor(num_df, use = "complete.obs")
corrplot(corr_matrix, method = "color", tl.cex = 0.7)
library(corrr)
library(ggplot2)
library(GGally)
# Convert to numeric if necessary
thyroid_data[continuous_var] <- lapply(thyroid_data[continuous_var], as.numeric)
num_df <- thyroid_data %>% select_if(is.numeric)
corr_matrix <- cor(num_df, use = "complete.obs")
corrplot(corr_matrix, method = "color", tl.cex = 0.7)
library(corrr)
library(ggplot2)
library(GGally)
# Convert to numeric if necessary
thyroid_data[numerical_var] <- lapply(thyroid_data[numerical_var], as.numeric)
# Compute correlation matrix
cor_matrix <- cor(thyroid_data[numerical_var], use = "complete.obs", method = "pearson")
# Print correlation matrix
print(cor_matrix)
# Visualize correlation matrix
ggcorrplot::ggcorrplot(cor_matrix, lab = TRUE, title = "Correlation Matrix of Continuous Variables")
# Create a model with categorical predictors
vif_model <- lm(Diagnosis ~ Family_History + Radiation_Exposure + Iodine_Deficiency + Smoking + Obesity + Diabetes + Gender + Country + Ethnicity, data = df)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(corrplot)
library(ggpubr)
library(readr)
library(gridExtra)
library(car)
# Load the dataset
thyroid_data <- read.csv("thyroid_cancer_risk_data.csv", stringsAsFactors = TRUE)
# Check the structure of the dataset
str(thyroid_data)
# Summary statistics
summary(thyroid_data)
# Check for missing values
colSums(is.na(thyroid_data))
# Convert categorical variables to factors
thyroid_data$Thyroid_Cancer_Risk <- as.factor(thyroid_data$Thyroid_Cancer_Risk)
thyroid_data$Diagnosis <- as.factor(thyroid_data$Diagnosis)
thyroid_data$Family_History <- as.factor(thyroid_data$Family_History)
thyroid_data$Radiation_Exposure <- as.factor(thyroid_data$Radiation_Exposure)
thyroid_data$Iodine_Deficiency <- as.factor(thyroid_data$Iodine_Deficiency)
thyroid_data$Smoking <- as.factor(thyroid_data$Smoking)
thyroid_data$Obesity <- as.factor(thyroid_data$Obesity)
thyroid_data$Diabetes <- as.factor(thyroid_data$Diabetes)
thyroid_data$Gender <- as.factor(thyroid_data$Gender)
thyroid_data$Country <- as.factor(thyroid_data$Country)
thyroid_data$Ethnicity <- as.factor(thyroid_data$Ethnicity)
# Create a model with categorical predictors
vif_model <- lm(Diagnosis ~ Family_History + Radiation_Exposure + Iodine_Deficiency + Smoking + Obesity + Diabetes + Gender + Country + Ethnicity, data = thyroid_data)
# Calculate VIF for categorical variables
vif_values <- vif(vif_model)
print(vif_values)
library(car)
# Ensure Diagnosis is a factor
thyroid_data$Diagnosis <- as.factor(thyroid_data$Diagnosis)
# Run logistic regression instead of linear regression
vif_model <- glm(Diagnosis ~ Family_History + Radiation_Exposure + Iodine_Deficiency +
Smoking + Obesity + Diabetes + Gender + Country + Ethnicity,
data = thyroid_data, family = binomial)
# Calculate VIF
vif_values <- vif(vif_model)
print(vif_values)
str(thyroid_data)
summary(thyroid_data[, numerical_var])
library(car)
# Run logistic regression instead of linear regression
vif_model <- glm(Diagnosis ~ Family_History + Radiation_Exposure + Iodine_Deficiency +
Smoking + Obesity + Diabetes + Gender + Country + Ethnicity,
data = thyroid_data, family = binomial)
# Calculate VIF
vif_values <- vif(vif_model)
print(vif_values)
thyroid_data <- read.csv("thyroid_cancer_risk_data.csv", stringsAsFactors = TRUE)
#summary(thyroid_data)
categorical_var <- c("Gender", "Country", "Ethnicity", "Family_History", "Radiation_Exposure", "Iodine_Deficiency", "Smoking", "Obesity", "Diabetes", "Thyroid_Cancer_Risk", "Diagnosis")
thyroid_data <- thyroid_data %>%
mutate(across(all_of(categorical_var), as.factor))
numerical_var <- c("Age", "TSH_Level", "T3_Level", "T4_Level", "Nodule_Size")
thyroid_data <- thyroid_data %>%
mutate(across(all_of(numerical_var), as.numeric))
# Apply Min-Max Scaling (0 to 1 normalization)
thyroid_data[numerical_vars] <- as.data.frame(lapply(thyroid_data[numerical_vars], function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}))
# Apply Min-Max Scaling (0 to 1 normalization)
thyroid_data[numerical_var] <- as.data.frame(lapply(thyroid_data[numerical_vars], function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}))
# Apply Min-Max Scaling (0 to 1 normalization)
thyroid_data[numerical_var] <- as.data.frame(lapply(thyroid_data[numerical_var], function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}))
# Verify scaling
summary(thyroid_data[numerical_vars])
# Apply Min-Max Scaling (0 to 1 normalization)
thyroid_data[numerical_var] <- as.data.frame(lapply(thyroid_data[numerical_var], function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}))
# Verify scaling
summary(thyroid_data[numerical_var])
thyroid_data <- read.csv("thyroid_cancer_risk_data.csv", stringsAsFactors = TRUE)
summary(thyroid_data)
# Apply Standardization (Z-score normalization)
thyroid_data[numerical_var] <- as.data.frame(lapply(thyroid_data[numerical_var], function(x) {
(x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)
}))
# Verify standardization
summary(thyroid_data[numerical_var])
# Fit a Generalized Linear Model (GLM) on the full dataset
glm_model <- glm(Diagnosis ~ ., data = thyroid_data, family = binomial)
# Display model summary
summary(glm_model)
# GLM on full data
glm_model <- glm(Thyroid_Cancer_Risk ~ ., data = thyroid_data, family = binomial)
# Display model summary
summary(glm_model)
#library(ggplot2)
# Distribution of diagnosis
ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, fill = Thyroid_Cancer_Risk)) +
geom_bar() +
theme_minimal() +
ggtitle("Diagnosis Distribution")
ggplot(thyroid_data, aes(x = Gender, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Gender and Diagnosis")
ggplot(thyroid_data, aes(x = Country, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Country and Diagnosis")
ggplot(thyroid_data, aes(x = Ethnicity, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Ethnicity and Diagnosis")
ggplot(thyroid_data, aes(x = Family_History, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Family History and Diagnosis")
ggplot(thyroid_data, aes(x = Radiation_Exposure, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Radiation Exposure and Diagnosis")
ggplot(thyroid_data, aes(x = Iodine_Deficiency, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Iodine Deficiency and Diagnosis")
ggplot(thyroid_data, aes(x = Smoking, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Smoking and Diagnosis")
ggplot(thyroid_data, aes(x = Obesity, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Obesity and Diagnosis")
ggplot(thyroid_data, aes(x = Diabetes, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Diabetes and Diagnosis")
ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Thyroid_Cancer_Risk and Diagnosis")
#library(ggplot2)
# Distribution of diagnosis
ggplot(thyroid_data, aes(x = Diagnosis, fill = Diagnosis)) +
geom_bar() +
theme_minimal() +
ggtitle("Diagnosis Distribution")
ggplot(thyroid_data, aes(x = Gender, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Gender and Diagnosis")
ggplot(thyroid_data, aes(x = Country, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Country and Diagnosis")
ggplot(thyroid_data, aes(x = Ethnicity, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Ethnicity and Diagnosis")
ggplot(thyroid_data, aes(x = Family_History, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Family History and Diagnosis")
ggplot(thyroid_data, aes(x = Radiation_Exposure, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Radiation Exposure and Diagnosis")
ggplot(thyroid_data, aes(x = Iodine_Deficiency, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Iodine Deficiency and Diagnosis")
ggplot(thyroid_data, aes(x = Smoking, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Smoking and Diagnosis")
ggplot(thyroid_data, aes(x = Obesity, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Obesity and Diagnosis")
ggplot(thyroid_data, aes(x = Diabetes, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Diabetes and Diagnosis")
ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, fill = Diagnosis)) +
geom_bar(position = "fill") +
ggtitle("Thyroid_Cancer_Risk and Diagnosis")
#library(ggplot2)
# Distribution of diagnosis
ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, fill = Thyroid_Cancer_Risk)) +
geom_bar() +
theme_minimal() +
ggtitle("Diagnosis Distribution")
ggplot(thyroid_data, aes(x = Gender, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Gender and Diagnosis")
ggplot(thyroid_data, aes(x = Country, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Country and Diagnosis")
ggplot(thyroid_data, aes(x = Ethnicity, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Ethnicity and Thyroid_Cancer_Risk")
ggplot(thyroid_data, aes(x = Family_History, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Family History and Diagnosis")
ggplot(thyroid_data, aes(x = Radiation_Exposure, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Radiation Exposure and Diagnosis")
ggplot(thyroid_data, aes(x = Iodine_Deficiency, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Iodine Deficiency and Diagnosis")
ggplot(thyroid_data, aes(x = Smoking, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Smoking and Diagnosis")
ggplot(thyroid_data, aes(x = Obesity, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Obesity and Diagnosis")
ggplot(thyroid_data, aes(x = Diabetes, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Diabetes and Diagnosis")
ggplot(thyroid_data, aes(x = Thyroid_Cancer_Risk, fill = Thyroid_Cancer_Risk)) +
geom_bar(position = "fill") +
ggtitle("Thyroid_Cancer_Risk and Diagnosis")
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/1. uni/Year 3/AT - ST310")
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
library(readr)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/1. uni/Year 3/AT - ST310")
setwd("~/Documents/1. uni/Year 3/AT - ST310")
library(readr)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
library(readr)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
library(readr)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/1. uni/Year 3/AT - ST310")
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv")
setwd("~/Documents")
setwd("~/Documents/1. uni/Year 3/AT - ST310")
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv")
getwd()
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv")
getwd()
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv")
summary(thyroid_data)
getwd()
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv", stringsAsfactors= TRUE)
getwd()
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv", stringsAsFactors= TRUE)
getwd()
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = FALSE)
thyroid_data <- read_csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = FALSE)
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
summary(thyroid_data)
colSums(is.na(thyroid_data))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
# Load the dataset
thyroid_data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
# Convert categorical variables to factors
thyroid_data$gender <- as.factor(thyroid_data$gender)
thyroid_data$hypertension <- as.factor(thyroid_data$hypertension)
thyroid_data$heart_disease <- as.factor(thyroid_data$heart_disease)
thyroid_data$ever_married <- as.factor(thyroid_data$ever_married)
thyroid_data$work_type <- as.factor(thyroid_data$work_type)
thyroid_data$Residence_type <- as.factor(thyroid_data$Residence_type)
thyroid_data$smoking_status <- as.factor(thyroid_data$smoking_status)
thyroid_data$stroke <- as.factor(thyroid_data$stroke)
# Identify numerical and categorical columns
numerical_vars <- c("age", "avg_glucose_level", "bmi")
categorical_vars <- c("gender", "hypertension", "heart_disease", "ever_married", "work_type", "Residence_type", "smoking_status", "stroke")
# Create boxplots for numerical variables
boxplots <- lapply(numerical_vars, function(var) {
ggplot(thyroid_data, aes(x = stroke, y = .data[[var]], fill = stroke)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var, "by Stroke")) +
theme_minimal()
})
# Create bar charts for categorical variables
barcharts <- lapply(categorical_vars, function(var) {
ggplot(thyroid_data, aes(x = .data[[var]], fill = stroke)) +
geom_bar(position = "fill") +
ggtitle(paste("Bar Chart of", var, "by Stroke")) +
theme_minimal()
})
# Arrange the plots in a grid
grid.arrange(grobs = boxplots, ncol = 2)
grid.arrange(grobs = barcharts, ncol = 2)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
# Convert categorical variables to factors
thyroid_data$gender <- as.factor(thyroid_data$gender)
thyroid_data$hypertension <- as.factor(thyroid_data$hypertension)
thyroid_data$heart_disease <- as.factor(thyroid_data$heart_disease)
thyroid_data$ever_married <- as.factor(thyroid_data$ever_married)
thyroid_data$work_type <- as.factor(thyroid_data$work_type)
thyroid_data$Residence_type <- as.factor(thyroid_data$Residence_type)
thyroid_data$smoking_status <- as.factor(thyroid_data$smoking_status)
thyroid_data$stroke <- as.factor(thyroid_data$stroke)
# Identify numerical and categorical columns
numerical_vars <- c("age", "avg_glucose_level", "bmi")
categorical_vars <- c("gender", "hypertension", "heart_disease", "ever_married", "work_type", "Residence_type", "smoking_status", "stroke")
# Create boxplots for numerical variables
boxplots <- lapply(numerical_vars, function(var) {
ggplot(thyroid_data, aes(x = stroke, y = .data[[var]], fill = stroke)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var, "by Stroke")) +
theme_minimal()
})
# Create bar charts for categorical variables
barcharts <- lapply(categorical_vars, function(var) {
ggplot(thyroid_data, aes(x = .data[[var]], fill = stroke)) +
geom_bar(position = "fill") +
ggtitle(paste("Bar Chart of", var, "by Stroke")) +
theme_minimal()
})
# Convert categorical variables to factors
thyroid_data$gender <- as.factor(thyroid_data$gender)
thyroid_data$hypertension <- as.factor(thyroid_data$hypertension)
thyroid_data$heart_disease <- as.factor(thyroid_data$heart_disease)
thyroid_data$ever_married <- as.factor(thyroid_data$ever_married)
thyroid_data$work_type <- as.factor(thyroid_data$work_type)
thyroid_data$Residence_type <- as.factor(thyroid_data$Residence_type)
thyroid_data$smoking_status <- as.factor(thyroid_data$smoking_status)
thyroid_data$stroke <- as.factor(thyroid_data$stroke)
# Identify numerical and categorical columns
numerical_vars <- c("age", "avg_glucose_level", "bmi")
categorical_vars <- c("gender", "hypertension", "heart_disease", "ever_married", "work_type", "Residence_type", "smoking_status", "stroke")
# Create and display boxplots for numerical variables
for (var in numerical_vars) {
print(
ggplot(thyroid_data, aes(x = stroke, y = .data[[var]], fill = stroke)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var, "by Stroke")) +
theme_minimal()
)
}
# Create and display bar charts for categorical variables
for (var in categorical_vars) {
print(
ggplot(thyroid_data, aes(x = .data[[var]], fill = stroke)) +
geom_bar(position = "fill") +
ggtitle(paste("Bar Chart of", var, "by Stroke")) +
theme_minimal()
)
}
# Load required libraries
library(dplyr)
library(ggplot2)
library(corrplot)
library(car)
library(ggcorrplot)
# ---------------------------
# 1. Load and Inspect the Data
# ---------------------------
# Read the CSV into the variable 'data'
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
# Load required libraries
library(dplyr)
library(ggplot2)
library(corrplot)
library(car)
library(ggcorrplot)
# ---------------------------
# 2. Convert Variables to Appropriate Types
# ---------------------------
# Define the categorical and numerical predictor names (for thyroid cancer)
categorical_var <- c("Gender", "Country", "Ethnicity", "Family_History",
"Radiation_Exposure", "Iodine_Deficiency", "Smoking",
"Obesity", "Diabetes", "Thyroid_Cancer_Risk", "Diagnosis")
numerical_var <- c("Age", "TSH_Level", "T3_Level", "T4_Level", "Nodule_Size")
# Convert categorical variables to factors
data <- data %>%
mutate(across(all_of(categorical_var), as.factor))
# Load required libraries
library(dplyr)
library(ggplot2)
library(corrplot)
library(car)
library(ggcorrplot)
# ---------------------------
# 2. Convert Variables to Appropriate Types
# ---------------------------
# Define the categorical and numerical predictor names (for thyroid cancer)
categorical_var <- c("Gender", "Country", "Ethnicity", "Family_History",
"Radiation_Exposure", "Iodine_Deficiency", "Smoking",
"Obesity", "Diabetes", "Thyroid_Cancer_Risk", "Diagnosis")
numerical_var <- c("Age", "TSH_Level", "T3_Level", "T4_Level", "Nodule_Size")
# Convert categorical variables to factors
data <- data %>%
mutate(across(all_of(categorical_var), as.factor))
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/1. uni/Year 3/AT - ST310")
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/GitHub/ST310_Project")
summary(data())
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/GitHub/ST310_Project")
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
setwd("~/Documents/GitHub/ST310_Project")
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
library(readr)
healthcare_dataset_stroke_data <- read_csv("healthcare-dataset-stroke-data.csv")
View(healthcare_dataset_stroke_data)
getwd()
data <- read.csv("healthcare-dataset-stroke-data.csv", stringsAsFactors = TRUE)
getwd()
data <- read_csv("healthcare-dataset-stroke-data.csv")
setwd("~/Documents/GitHub/ST310_Project")
getwd()
data <- read_csv("healthcare-dataset-stroke-data.csv")
categorical_var <- c("Gender", "Country", "Ethnicity", "Family_History", "Radiation_Exposure", "Iodine_Deficiency", "Smoking", "Obesity", "Diabetes", "Thyroid_Cancer_Risk", "Diagnosis")
thyroid_data <- thyroid_data %>%
mutate(across(all_of(categorical_var), as.factor))
View(healthcare_dataset_stroke_data)
